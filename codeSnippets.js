export const codeSnippets = [
    'function hackSystem() {',
    '    console.log("Hacking in progress...");',
    '    let accessGranted = false;',
    '    for (let i = 0; i < 1000; i++) {',
    '        if (Math.random() > 0.99) {',
    '            accessGranted = true;',
    '            break;',
    '        }',
    '    }',
    '    return accessGranted;',
    '}',
    'const result = hackSystem();',
    'if (result) {',
    '    console.log("Access granted!");',
    '} else {',
    '    console.log("Access denied.");',
    '}',
    '// Additional code to extend the simulation',
    'function encryptData(data) {',
    '    let encrypted = "";',
    '    for (let i = 0; i < data.length; i++) {',
    '        encrypted += String.fromCharCode(data.charCodeAt(i) + 1);',
    '    }',
    '    return encrypted;',
    '}',
    'const data = "Sensitive Information";',
    'const encryptedData = encryptData(data);',
    'console.log("Encrypted Data:", encryptedData);',
    'function decryptData(data) {',
    '    let decrypted = "";',
    '    for (let i = 0; i < data.length; i++) {',
    '        decrypted += String.fromCharCode(data.charCodeAt(i) - 1);',
    '    }',
    '    return decrypted;',
    '}',
    'const decryptedData = decryptData(encryptedData);',
    'console.log("Decrypted Data:", decryptedData);',
    '// More code snippets for simulation',
    'function bruteForcePassword() {',
    '    const charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";',
    '    let password = "";',
    '    for (let i = 0; i < 8; i++) {',
    '        password += charset[Math.floor(Math.random() * charset.length)];',
    '    }',
    '    return password;',
    '}',
    'const password = bruteForcePassword();',
    'console.log("Generated Password:", password);',
    'function simulateNetworkScan() {',
    '    const ips = ["192.168.0.1", "192.168.0.2", "192.168.0.3", "192.168.0.4"];',
    '    ips.forEach(ip => console.log("Scanning IP:", ip));',
    '}',
    'simulateNetworkScan();',
    'console.log("Network scan complete.");'
];
